<?php

/**
 * @file
 * The opendtp Drupal module.
 */

/**
 * Implements hook_help().
 */
function opendtp_help($path, $arg)
{
  switch ($path)
  {
  case 'admin/help#opendtp':
    $output = '<p>'. t('Integration with <a href="@opendtp">opendtp</a> web hosting.', array('@opendtp' => 'http://opendtp.net')) .'</p>';
    return $output;
  case 'admin/config/services/opendtp':
    return '<p>'. t('Configuration et informations du module API pour  <a href="@opendtp">opendtp</a> .', array('@opendtp' => 'http://opendtp.net')) .'</p>';
  }
}

/**
 * Implements hook_permission().
 */
function opendtp_permission()
{
  return array(
    'administer opendtp' => array(
      'title' => t('Administer opendtp'),
      'description' => t('Perform administrative actions with opendtp.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function opendtp_menu()
{
 $items = array();
  $items['admin/config/services/opendtp'] = array(
    'title' => 'Opendtp',
    'description' => 'Provides configuration options for opendtp.',
    'access arguments' => array('administer opendtp'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('opendtp_admin_settings'),
    'file' => 'opendtp.admin.inc',
  );
  $items['admin/config/services/opendtp/general'] = array(
    'title' => 'General',
    'access arguments' => array('administer opendtp'),
    'description' => 'Provides general configuration options for opendtp.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('opendtp_admin_settings'),
    'file' => 'opendtp.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -5,
  );
 return $items;
}

/*
 * Implementation of hook_theme().
 */
function opendtp_theme($existing, $type, $theme, $path)
{
	  return array(
		'opendtp_slide' => array(
		  'variables' => array('content' => NULL),
		  'template' => 'opendtp_slide',
		  'path' => drupal_get_path('module', 'opendtp').'/templates/blocks'
		),
		'opendtp_jstree' => array(
		  'variables' => array('content' => NULL),
		  'template' => 'opendtp_jstree',
		  'path' => drupal_get_path('module', 'opendtp').'/templates/blocks'
		),
	  );
}

function opendtp_block_info()
{
	$blocks = array ();
	$blocks['opendtp_slide'] = array (
	'info' => t('OpenDTP Slide'),
	'cache' => DRUPAL_NO_CACHE,
	);
	$blocks['opendtp_jstree'] = array (
	'info' => t('OpenDTP JSTree'),
	'cache' => DRUPAL_NO_CACHE,
	);
	return $blocks;
}

/**
* Implements hook_block_view().
*/
function opendtp_block_view($name)
{
  $variables['module_path'] = drupal_get_path('module', 'opendtp');
	
  if ($name == 'opendtp_slide')
	{
		$block['subject'] = t('OpenDTP Slide');
		$block['content'] = theme('opendtp_slide', $variables);
		return $block;
	}
	else if ($name == 'opendtp_jstree')
	{
    $result = db_query("SELECT n.nid, n.title FROM {node} n WHERE n.type = 'page'");
    $items = array();
    foreach ($result as $row)
      $variables['query'] = l($row->title, "node/{$row->nid}");
		$block['subject'] = t('OpenDTP JSTree');
		$block['content'] = theme('opendtp_jstree', $variables);
		return $block;
	}
}


/**
 * Makes a call to the opendtp API.
 *
 * Returns NULL if it can't reach the opendtp API.
 */
function opendtp($cmd, array $args = array())
{
  static $opendtp = NULL;
  if (!isset($opendtp))
  {
    $key = variable_get('opendtp_key', '');
    $api_url = variable_get('opendtp_api_url', '');
    module_load_include('php', 'opendtp');
    $opendtp = empty($key) ? FALSE : new opendtp($key, $api_url);
  }
  if ($opendtp)
  {
    try
    {
      return $opendtp->call($cmd, $args);
    }
    catch (Exception $ex)
    {
      watchdog('opendtp', (string)$ex, array(), WATCHDOG_ERROR, $_GET['q']);
    }
  }
  return NULL;
}
